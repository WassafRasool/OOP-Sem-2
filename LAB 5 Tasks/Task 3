#include <iostream>
#include <string>

using namespace std;

class Professor {
private:
    string name;
    string department;

public:
    // Constructor
    Professor(string n, string d) : name(n), department(d) {}

    // Function to display professor details
    void display() const {
        cout << "Professor Name: " << name << ", Department: " << department << endl;
    }
};

class University {
private:
    string uniName;
    Professor** professors; // Dynamic array of pointers to professors
    int count;
    int capacity;

public:
    // Constructor
    University(string name, int cap) : uniName(name), count(0), capacity(cap) {
        professors = new Professor*[capacity]; // Allocate memory for professors
    }

    // Function to add a professor
    void addProfessor(string name, string department) {
        if (count < capacity) {
            professors[count] = new Professor(name, department);
            count++;
        } else {
            cout << "Cannot add more professors, capacity full!" << endl;
        }
    }

    // Function to display university details
    void display() const {
        cout << "University: " << uniName << endl;
        cout << "Professors List: " << endl;
        for (int i = 0; i < count; i++) {
            professors[i]->display();
        }
    }

    // Destructor to free allocated memory
    ~University() {
        for (int i = 0; i < count; i++) {
            delete professors[i];
        }
        delete[] professors;
    }
};

int main() {
    // Creating a university with capacity for 3 professors
    University uni("FAST University", 3);

    // Adding professors
    uni.addProfessor("Dr. Ali", "Computer Science");
    uni.addProfessor("Dr. Sarah", "AI & DS");
    uni.addProfessor("Dr. Ahmed", "Software Engineering");

    // Display university details
    uni.display();

    return 0;
}
